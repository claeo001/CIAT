# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Test

on:
  pull_request:
    branches: 
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend      
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
  
    - name: test
      run: gradle test -Djasypt.encryptor.password=${{ secrets.KEY }}
    - name: Discord notification
      if: failure()
      env:
        DISCORD_USERNAME: PR fail
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.'
    - name: if fail  # 만약 실패했을 때의 설정
      uses: actions/github-script@v3  # 커스텀 스크립트를 사용하게 해주는 액션
      with:  # 커스텀 스크립트 작성란
        github-token: $  # 깃허브 토큰으로 PR을 close시킴
        script: |
            const ref = "$"
            const pull_number = Number(ref.split("/")[2])
            await github.pulls.createReview({
              ...context.repo,
              pull_number,
              body:"테스트코드를 다시 확인해주세요. ",
              event: "REQUEST_CHANGES"
            })
            await github.pulls.update({
              ...context.repo,
              pull_number,
              state: "closed"
            })
        if: failure()  # 실패했다는 이벤트가 발생하면 바로 위의 액션 실행
